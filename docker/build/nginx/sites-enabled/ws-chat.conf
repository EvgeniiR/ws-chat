server {
    server_name localhost;
    root /var/www/html/ws-chat/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location /ws {
        proxy_pass http://ws:9502;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    # DEV
    # This rule swoole_websocket_servershould only be placed on your development environment
    # In production, don't include this and don't deploy index_dev.php or config.php
    #location ~ ^/(index_dev|config)\.php(/|$) {
    #    fastcgi_pass php:9000;
    #    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    #    include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
    #    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    #    fastcgi_param DOCUMENT_ROOT $realpath_root;
    #}
    # PROD
    location ~ ^/index\.php(/|$) {
        # php-fpm mean container name
        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
